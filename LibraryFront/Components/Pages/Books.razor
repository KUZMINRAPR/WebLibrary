@page "/Books"
@rendermode InteractiveServer

<PageTitle>Книги</PageTitle>

<h1>Все Книги которые есть на сервере будут отображаться в этом окне</h1>

<h2>Книги</h2>
<table class="table">
    <thead>
        <tr>
            <th>Название</th>
            <th>Автор</th>
            <th>Описание</th>
            <th>Изображение</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in books)
        {
            <tr>
                <td>@book?.Title</td>
                <td>@book?.Author</td>
                <td>@book?.Description</td>
                <td>
                    @if (book?.ImageUrl != null)
                    {
                        <img src="@book.ImageUrl" alt="Изображение книги" style="width: 100px; height: auto;" />
                    }
                    else
                    {
                        <span>Нет изображения</span>
                    }
                </td>
            </tr>
        }
    </tbody>
        
</table>

@code {
    private Book?[] books;


    // Этот метод будет вызывать книгу с сервера на Бэке TODO: Запрос туда сделать через HttpClient
    private async Task? GetBooksFromServer()
    {
        return;
    }

    // При запуске сраницы будет вызываться этот метод
    protected override async Task OnInitializedAsync()
    {
        GetBooksForTest();
    }
    
    // Пока у меня нет сервера, я буду использовать этот метод для получения книг
    // TODO: Если я захочу дальше апгрейдить этот проект надо будет добавить делегат для возможности различных способов получения книг
    internal void GetBooksForTest()
    {
        books = new Book?[]
        {
            new Book { Title = "Братья Карамазовы", Author = "Федор Достоевский", 
                Description  = "Роман о нравственном выборе, свободе и ответственности"},
            new Book { Title = "1984", Author = "Джордж Оруэлл",
                Description = "Антиутопический роман о тоталитарном обществе"},
            new Book { Title = "Убить пересмешника", Author = "Харпер Ли",
                Description = "Роман о расовых предрассудках и справедливости в американском юге"}
        };
    }


    // Сделал не null потому что потом я думаю бы страшно ебался с null
    internal class Book {
        public string Title { get; init; } = "Базовое название книги";
        public string Author { get; init; } = "Автор книги";
        public string? Description {get; set;} = null;
        public string? ImageUrl { get; set; } = null;
    }
}