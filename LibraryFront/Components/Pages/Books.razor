@using LibraryFront.Components.Models;

@page "/books"
@inject HttpClient client

<PageTitle>Книги</PageTitle>

<h1>Все Книги которые есть на сервере будут отображаться в этом окне</h1>

<h2>Книги</h2>
<table class="table">
    <thead>
        <tr>
            <th>Название</th>
            <th>Автор</th>
            <th>Описание</th>
            <th>Изображение</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in books)
        {
            <tr>
                <td>@book?.Title</td>
                <td>@book?.Author</td>
                <td>@book?.Description</td>
                <td>
                    @if (book?.ImageUrl != null)
                    {
                        <img src="@book.ImageUrl" alt="Изображение книги" style="width: 100px; height: auto;" />
                    }
                    else
                    {
                        <span>Нет изображения</span>
                    }
                </td>
            </tr>
        }
    </tbody>
        
</table>

<h2>Если вы хотите добавить книгу, то напишите сюда её данные</h2>

<div>
    <label for="bookTitle">Название книги</label>
    <InputText @bind-Value="newBook.Title" class="form-control" />
</div>
<div>
    <label for="bookAuthor">Автор книги</label>
    <InputText @bind-Value="newBook.Author" class="form-control" />
</div>
<div>
    <label for="bookDescription">Описание книги</label>
    <InputTextArea @bind-Value="newBook.Description" class="form-control" />
</div>
<div>
    <label for="bookImageUrl">Ссылка на изображение книги</label>
    <InputText @bind-Value="newBook.ImageUrl" class="form-control" />
</div>

<div>
    <button class="btn btn-primary" @onclick="AddBook">Добавить книгу</button>
</div>

@code {
    private Book?[] books = Array.Empty<Book>();
    private Book newBook = new Book();

    protected override async Task OnInitializedAsync()
    {
        // Получаем книги с сервера
        books = await GetBooksFromServer();
    }

    // TODO: Этот метод будет вызывать книгу с сервера на Бэке TODO: Запрос туда сделать через HttpClient
    private async Task<Book[]?> GetBooksFromServer()
    {
        var response = await client.GetAsync("/api/books");
        if (response.IsSuccessStatusCode)
        {
            var books = await response.Content.ReadFromJsonAsync<Book[]>();
            return books;
        }
        return null;
    }
    
    // Пока у меня нет сервера, я буду использовать этот метод для получения книг
    // TODO: Если я захочу дальше апгрейдить этот проект надо будет добавить делегат для возможности различных способов получения книг
    internal Book[] GetBooksForTest()
    {
        return new Book[]
        {
            new Book { Title = "Братья Карамазовы", Author = "Федор Достоевский", 
                Description  = "Роман о нравственном выборе, свободе и ответственности"},
            new Book { Title = "1984", Author = "Джордж Оруэлл",
                Description = "Антиутопический роман о тоталитарном обществе"},
            new Book { Title = "Убить пересмешника", Author = "Харпер Ли",
                Description = "Роман о расовых предрассудках и справедливости в американском юге"}
        };
    }

    private async Task AddBook()
    {
        var response = await client.PostAsJsonAsync("/api/books", newBook);
        if (response.IsSuccessStatusCode)
        {
            books.Append(newBook);
            newBook = new Book(); // Сбросить форму после добавления
        }
    }

}